spring.application.name=crypto-service
server.port=8082
kafka.bootstrap-servers=${KAFKA_HOST}:${KAFKA_PORT}

# Consumer configuration for user registration
spring.kafka.consumer.user-registration.group-id=cryptoServiceUserRegistrationGroup
spring.kafka.consumer.user-registration.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.user-registration.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Consumer configuration for transactions
spring.kafka.consumer.transaction.group-id=cryptoServiceTransactionGroup
spring.kafka.consumer.transaction.key-deserializer=org.apache.kafka.common.serialization.LongDeserializer
spring.kafka.consumer.transaction.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.transaction.json.trusted.packages=*

# Producer configuration for transactions
spring.kafka.producer.transaction.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.transaction.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?createDatabaseIfNotExist=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.database = MYSQL
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.hibernate.ddl-auto=create-drop
supported.cryptocurrencies=BTC,ETH,DOGE,USDT